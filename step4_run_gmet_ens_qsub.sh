#!/bin/bash
set -e

# H. liu, April 28, 2020.
# Run ensemble forcing generation year by year by generate_ensemble.exe.
# Depending on the existence of regression file generated by GMET downscaling code.
# Reference: /home/hydrofcst/otl_support/forcings/GMET/run/run_ens_forc.RETRO.csh
 
#------------------------------------------------------------
# Update setup
RootDir=/glade/u/home/hongli/scratch/2020_04_21nldas_gmet
SampleMode=uniform #uniform random

SourceDir=${RootDir}/scripts
StnlistDir=${SourceDir}/step1_sample_stnlist_${SampleMode}_perturb
WorkDirBase=${RootDir}/test_${SampleMode}_perturb
if [ ! -d ${WorkDirBase} ]; then mkdir -p ${WorkDirBase}; fi

startEns=1  # start number of ensembles to generate
stopEns=100  # stop number of ensembles to generate
sYear=2015 
eYear=2016

Program=/glade/u/home/hongli/tools/GMET-1/SHARP/scrf/generate_ensemble.exe
Template=/glade/u/home/hongli/github/2020_04_21nldas_gmet/config/namelist.ens_forc.TEMPLATE.txt 
GridInfo=${RootDir}/data/nldas_topo/conus_ens_grid_eighth.nc

#------------------------------------------------------------
FILES=( $(ls ${StnlistDir}/*.txt) )
FILE_NUM=${#FILES[@]}
# for i in $(seq 1 $(($FILE_NUM -1))); do
for i in $(seq 0 0); do

    FileName=${FILES[${i}]} 
    FileName=${FileName##*/} # get basename of filename
    FileNameShort="${FileName/.txt/}" # remove suffix ".txt"
    GridNum=$(echo $FileNameShort| cut -d'_' -f 2) # extract substring "012grids"    
    CaseID=${GridNum}
    echo ${CaseID}

    # create work folders
    WorkDir=${WorkDirBase}/${CaseID}
    if [ ! -d ${WorkDir} ]; then mkdir ${WorkDir}; fi
    if [ ! -d ${WorkDir}/tmp ]; then mkdir ${WorkDir}/tmp; fi
    if [ ! -d ${WorkDir}/gmet_ens ]; then mkdir ${WorkDir}/gmet_ens; fi
           
    # loop through years
    for Y in $(seq ${sYear} ${eYear}); do
        nDays=$(echo $Y | awk '{if($1%4==0){print 366}else{print 365}}') 
        echo $Y, $nDays
        
        # configure config, output and log files
        ConfigFile=${WorkDir}/tmp/namelist.ens_forc.$Y
        InRegrFile=${WorkDir}/gmet_regr/regress_ts.$Y.nc

        OutEnsForcRoot=${WorkDir}/gmet_ens/ens_forc.$Y
        rm -f $OutEnsForcRoot.*.nc
        
        sed "s,NDays,$nDays,g" $Template |\
        sed "s,StartEns,$startEns,g" |\
        sed "s,StopEns,$stopEns,g" |\
        sed "s,GridInfo,$GridInfo,g" |\
        sed "s,InRegrFile,$InRegrFile,g" |\
        sed "s,OutEnsForcRoot,$OutEnsForcRoot,g" > $ConfigFile
        chmod 740 ${ConfigFile}

        # create job submission file
        CommandFile=${WorkDir}/tmp/qsub.ens_forc.$Y
        if [ -e ${command_file} ]; then rm -rf ${command_file}; fi
        
        LogFile=${WorkDir}/tmp/log.ens_forc.$Y
        rm -f $LogFile.*

        echo '#!/bin/bash' > ${CommandFile}
        echo "#PBS -N ens.${CaseID}.${Y}" >> ${CommandFile}
        echo '#PBS -A P48500028' >> ${CommandFile}
        echo '#PBS -q regular' >> ${CommandFile}
        echo '#PBS -l select=1:ncpus=1:mpiprocs=1' >> ${CommandFile}
        echo '#PBS -l walltime=12:00:00' >> ${CommandFile}
        echo "#PBS -o ${LogFile}.o" >> ${CommandFile}
        echo "#PBS -e ${LogFile}.e" >> ${CommandFile}
        
        echo "mkdir -p /glade/scratch/hongli/temp" >> ${CommandFile}
        echo "export TMPDIR=/glade/scratch/hongli/temp" >> ${CommandFile}

        echo "module load gnu" >> ${CommandFile}
        echo "module load netcdf" >> ${CommandFile}
        echo "${Program} ${ConfigFile}" >> ${CommandFile}
        chmod 740 ${CommandFile}
        
        qsub ${CommandFile}

     done
done

